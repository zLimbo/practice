#include <iostream>
#include "BankerAlgorithm.h"



int main() {
	
	print();
}

//void RandomGenerate(CustomerCls &customers) {	 // 随机生成模块 
//	
//	ResourceUpperLimit(); // 随机生成资源上限
//	
//	CustomerHoldupTime(); // 随机生成客户占用资源时间 
//	 
//	ResourceInitialValue();	// 随机生成资源初始值
//	 
//}
//
//
//void GetMassSafeSequence(CustomerCls &customers, vector<ResourceCls> &) {	// 获得尽可能多的安全序列 
//	
//	Allocate();	// 分配模块  
//	
//	Monitor(); // 监控模块 
//	
//	Recycle(); // 回收模块 
//	
//} 
//
//void SortSafeSequence(vector<SafeSequenceCls> &safeSeqSet) {	// 排序
//	
//	// 快速排序算法 
//} 
//
//SafeSequenceCls GetBestSafeSquence(Vector<SafeSequenceCls> &safeSeqSet) {		// 获得最好的安全序列 
//	
//	// 一步操作 
//} 
//
//int main() {	// 主模块 
//	
//	RandomInitial(CustomerCls &customers);	// 随机模块 
//	
//	GetMassSafeSequence(vector<SafeSequenceCls> &safeSeqSet);	// 获得尽可能多的安全序列 
//	
//	 		// 排序 
//	
//	List bestSeq = GetBestSafeSequence(Vector<SafeSequenceCls> &safeSeqSet);	// 获得最好的安全序列 
//	
//	return 0;
//}
